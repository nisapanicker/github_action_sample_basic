name: Android Build and Deployment Pipeline

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch from which we have to build'
        required: true
jobs:
  build:
    permissions: write-all
    name: Setup Environment and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code to specific branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
        ## Build all our Build Types at once ##
      - name: Build all artifacts
        id: buildAllApks
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: assembleRelease

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false


      - name: Save name of our Artifact
        id: set-result-artifact
        run: |
              ARTIFACT_PATHNAME_APK=$(ls app/build/outputs/apk/release/*.apk | head -n 1)
              ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
              echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
              echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
              echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV
      - name: Upload apk
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: app/build/outputs/apk/release/*.apk

      - name: Upload our Artifact Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
          asset_name: ${{ env.ARTIFACT_NAME_APK }}
          asset_content_type: application/zip

          ##- name: Generate app bundle.
          ## run: ./gradlew app:bundleRelease --stacktrace

          ##- name: Run Kotlin Linter
          ## run: ./gradlew ktlintStagingDebugCheck

  #   STEP 2 : Upload the Artifact
  upload:
    needs: [ build ]
    name: Upload the signed artifact
    runs-on: ubuntu-latest
    steps:
      - name: Upload Bundle
        uses: actions/upload-artifact@v2
        with:
          name: signed_app_bundle
          path: app/build/outputs/apk/release/*.apk
          
